import c_init(int, name) as init;
import c_iprint(int) as iprint;
import c_print(value) as print;
import c_sum(name, value, value) as sum;
import c_get_end(name, value) as get_end;
import c_set_cur_len(name, value) as set_cur_len;
import c_mul(name, value, value) as mul;

// 1 4 9 16 25
// 5 25 25
// 30 25 
// 55

sub get_result(name res, int len) {
    df end, cur_len;

    init(len, cur_len[0]); // starting length is len
    get_end(end, cur_len[0]); // count of iterations

    for i = 0..(end - 1) {
        set_cur_len(cur_len[i + 1], cur_len[i]);

        if (cur_len[i] % 2 == 0) {
            for j = 0..(cur_len[i + 1] - 1) {
                sum(res[i + 1][j], res[i][j * 2], 
                    res[i][j * 2 + 1]);
            }
        }

        if (cur_len[i] % 2 != 0) {
            for j = 0..(cur_len[i + 1] - 2) {
                sum(res[i + 1][j], res[i][j * 2], 
                    res[i][j * 2 + 1]);
            }

            // just copy last elem
            init(res[i][(cur_len[i + 1] - 1) * 2],
                 res[i + 1][cur_len[i + 1] - 1]); 
        }
    }

    print(res[end][0]);
}

sub scalar_mul(name x, name y, int len) {
    df res, end, cur_len;

    for i = 0..(len - 1) {
        mul(res[0][i], x[i], y[i]);
    }
    get_result(res, len);
}

sub main() {
	df x, y;
    init(1, x[0]);
    init(2, x[1]);
    init(3, x[2]);
    init(4, x[3]);
    init(5, x[4]);
    init(6, x[5]);

    init(1, y[0]);
    init(1, y[1]);
    init(1, y[2]);
    init(1, y[3]);
    init(1, y[4]);
    init(1, y[5]);

    scalar_mul(x, y, 6);
}













